[{"/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/index.tsx":"1","/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/JoinGroupModal.tsx":"2","/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/Status.tsx":"3","/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/ParentContainer.tsx":"4","/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/GroupPage.tsx":"5","/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/ListView.tsx":"6","/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/Header.tsx":"7","/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/CreateGroupModal.tsx":"8"},{"size":975,"mtime":1610186024114,"results":"9","hashOfConfig":"10"},{"size":2535,"mtime":1610187579903,"results":"11","hashOfConfig":"10"},{"size":512,"mtime":1610139623394,"results":"12","hashOfConfig":"10"},{"size":2403,"mtime":1610324617532,"results":"13","hashOfConfig":"10"},{"size":1591,"mtime":1610188051513,"results":"14","hashOfConfig":"10"},{"size":1014,"mtime":1610183786849,"results":"15","hashOfConfig":"10"},{"size":515,"mtime":1610139623391,"results":"16","hashOfConfig":"10"},{"size":2579,"mtime":1610187832924,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1civyqt",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/index.tsx",[],"/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/JoinGroupModal.tsx",["36","37"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalContent,\n  ModalBody,\n  ModalFooter,\n  ModalOverlay,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Button,\n  Input,\n  useToast\n  \n} from '@chakra-ui/react';\nimport axios from 'axios';\n\ntype ModalProps = {\n  open: boolean;\n  closeModal: () => void;\n};\n\nfunction delay(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst joinGroup = async (id: string): Promise<any> => {\n  try {\n    const resp = await axios.get('/bubble/join/' + id)\n    return resp.data;\n  }catch (e: any){\n    if(e.response){\n      throw new Error(e.response.data.message);\n    }else{\n      throw new Error('Cannot add to group!');\n    }\n  }\n\n}\n\n\nconst JoinGroupModal: React.FC<ModalProps> = (props: ModalProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [code, setCode] = useState<string>(\"\");\n  const toast = useToast();\n\n  const history = useHistory();\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setLoading(true);\n    try {\n      await delay(500);\n\n      await joinGroup(code);\n\n      props.closeModal();\n      toast({\n        title: 'Joined!',\n        description: 'You have joined the group!',\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n      \n\n    } catch (e) {\n      console.log(e);\n      toast({\n        title: 'Group does not exist!',\n        description: String(e),\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n    history.push(\"/\");\n    setLoading(false);\n  };\n\n  const onCodeChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setCode(event.currentTarget.value);\n  }\n\n\n  return (\n    <Modal isOpen={props.open} onClose={props.closeModal}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Group Code:</ModalHeader>\n        <ModalCloseButton />\n          <form onSubmit={handleSubmit}>\n          <ModalBody>\n            <FormControl>\n              <FormLabel>Type your 5-digit group code:</FormLabel>\n              <Input onChange={onCodeChange} placeholder=\"XXXXX\" />\n            </FormControl>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" isLoading={loading}>Join</Button>\n            <Button onClick={props.closeModal}>Cancel</Button>\n          </ModalFooter>\n          </form>\n        \n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default JoinGroupModal;\n","/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/Status.tsx",[],"/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/ParentContainer.tsx",["38","39","40","41"],"/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/GroupPage.tsx",[],"/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/ListView.tsx",[],"/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/Header.tsx",[],"/Users/rithik/Documents/GT/spring2021/bubbles-app/client/src/components/CreateGroupModal.tsx",["42","43"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalContent,\n  ModalBody,\n  ModalFooter,\n  ModalOverlay,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Button,\n  Input,\n  useToast\n  \n} from '@chakra-ui/react';\nimport axios from 'axios';\n\ntype ModalProps = {\n  open: boolean;\n  closeModal: () => void;\n};\n\nfunction delay(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst createGroup = async (bubbleName: string): Promise<any> => {\n  try {\n    const resp = await axios.post('/bubble/create', {name: bubbleName})\n    return resp.data;\n  }catch (e: any){\n    if(e.response){\n      throw new Error(e.response.data.message);\n    }else{\n      throw new Error('Cannot add to group!');\n    }\n  }\n\n}\n\n\nconst JoinGroupModal: React.FC<ModalProps> = (props: ModalProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [name, setName] = useState<string>(\"\");\n  const toast = useToast();\n\n  const history = useHistory();\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setLoading(true);\n    try {\n      await delay(500);\n\n      await createGroup(name);\n\n      props.closeModal();\n      toast({\n        title: 'Joined!',\n        description: 'You have joined the group!',\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n      \n\n    } catch (e) {\n      console.log(e);\n      toast({\n        title: 'Group does not exist!',\n        description: String(e),\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n    history.push(\"/\");\n    setLoading(false);\n  };\n\n  const onNameChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setName(event.currentTarget.value);\n  }\n\n\n  return (\n    <Modal isOpen={props.open} onClose={props.closeModal}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Group Name:</ModalHeader>\n        <ModalCloseButton />\n          <form onSubmit={handleSubmit}>\n          <ModalBody>\n            <FormControl>\n              <FormLabel>Type your group name:</FormLabel>\n              <Input onChange={onNameChange} placeholder=\"i.e. Beyblades: Let it rip\" />\n            </FormControl>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" isLoading={loading}>Create</Button>\n            <Button onClick={props.closeModal}>Cancel</Button>\n          </ModalFooter>\n          </form>\n        \n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default JoinGroupModal;\n",{"ruleId":"44","severity":1,"message":"45","line":30,"column":47,"nodeType":"46","messageId":"47","endLine":30,"endColumn":50,"suggestions":"48"},{"ruleId":"44","severity":1,"message":"45","line":34,"column":14,"nodeType":"46","messageId":"47","endLine":34,"endColumn":17,"suggestions":"49"},{"ruleId":"44","severity":1,"message":"45","line":25,"column":36,"nodeType":"46","messageId":"47","endLine":25,"endColumn":39,"suggestions":"50"},{"ruleId":"44","severity":1,"message":"45","line":30,"column":14,"nodeType":"46","messageId":"47","endLine":30,"endColumn":17,"suggestions":"51"},{"ruleId":"44","severity":1,"message":"45","line":42,"column":38,"nodeType":"46","messageId":"47","endLine":42,"endColumn":41,"suggestions":"52"},{"ruleId":"44","severity":1,"message":"45","line":47,"column":13,"nodeType":"46","messageId":"47","endLine":47,"endColumn":16,"suggestions":"53"},{"ruleId":"44","severity":1,"message":"45","line":30,"column":57,"nodeType":"46","messageId":"47","endLine":30,"endColumn":60,"suggestions":"54"},{"ruleId":"44","severity":1,"message":"45","line":34,"column":14,"nodeType":"46","messageId":"47","endLine":34,"endColumn":17,"suggestions":"55"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["56","57"],["58","59"],["60","61"],["62","63"],["64","65"],["66","67"],["68","69"],["70","71"],{"messageId":"72","fix":"73","desc":"74"},{"messageId":"75","fix":"76","desc":"77"},{"messageId":"72","fix":"78","desc":"74"},{"messageId":"75","fix":"79","desc":"77"},{"messageId":"72","fix":"80","desc":"74"},{"messageId":"75","fix":"81","desc":"77"},{"messageId":"72","fix":"82","desc":"74"},{"messageId":"75","fix":"83","desc":"77"},{"messageId":"72","fix":"84","desc":"74"},{"messageId":"75","fix":"85","desc":"77"},{"messageId":"72","fix":"86","desc":"74"},{"messageId":"75","fix":"87","desc":"77"},{"messageId":"72","fix":"88","desc":"74"},{"messageId":"75","fix":"89","desc":"77"},{"messageId":"72","fix":"90","desc":"74"},{"messageId":"75","fix":"91","desc":"77"},"suggestUnknown",{"range":"92","text":"93"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"92","text":"94"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"95","text":"93"},{"range":"95","text":"94"},{"range":"96","text":"93"},{"range":"96","text":"94"},{"range":"97","text":"93"},{"range":"97","text":"94"},{"range":"98","text":"93"},{"range":"98","text":"94"},{"range":"99","text":"93"},{"range":"99","text":"94"},{"range":"100","text":"93"},{"range":"100","text":"94"},{"range":"101","text":"93"},{"range":"101","text":"94"},[523,526],"unknown","never",[631,634],[479,482],[584,587],[770,773],[879,882],[533,536],[658,661]]